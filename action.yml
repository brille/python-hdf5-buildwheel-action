name: 'Build wheel via Conda'
description: 'Reusable wheel builder action for a hybrid Python project using HDF5 and needing numpy for tests'
inputs:
  os:
    required: true
    description: The runner operating system
  platform:
    required: true
    description: The, e.g., platform to target
  arch:
    required: true
    description: The targeted architecture
  python-version:
    required: true
    description: The Python version to use

runs:
  using: "composite"
  steps:
      -
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ inputs.python-version }}
          activate-environment: env
          channels: conda-forge,defaults
          mamba-version: "*"
      -
        if: startsWith(inputs.os, 'windows')
        shell: bash -l {0}
        run: mamba install hdf5 numpy cmake
      -
        if: startsWith(inputs.os, 'macos')
        shell: bash -l {0}
        run: |
          mamba install llvm-openmp==11.1.0 numpy cmake
          brew install rename hdf5
      -
        name: Update python tools
        shell: bash -l {0}
        run: python -m pip install --upgrade pip setuptools setuptools_scm wheel
      -
        if: startsWith(inputs.os, 'windows')
        shell: bash -l {0}
        run: python -m pip install --upgrade delvewheel
      -
        if: startsWith(inputs.os, 'macos')
        shell: bash -l {0}
        run: python -m pip install --upgrade delocate
      -
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Build the wheel
        shell: bash -l {0}
        run: python -m pip wheel --no-deps -w wheelhouse .
      -
        if: startsWith(inputs.os, 'windows')
        name: Fix the (windows) wheel
        shell: bash -l {0}
        run: delvewheel repair -w dist -v wheelhouse/*.whl
      -
        if: startsWith(inputs.os, 'macos')
        name: Fix & rename the (macOS) wheel
        shell: bash -l {0}
        run: |
          DYLD_LIBRARY_PATH=/usr/local/miniconda/envs/env/lib delocate-wheel -w dist -v wheelhouse/*.whl
          rename -e 's/10_15/10_13/' dist/*.whl
      -
        name: Install the wheel
        shell: bash -l {0}
        run: python -m pip install dist/*.whl
      -
        name: Test installed wheel
        shell: bash -l {0}
        working-directory: wrap/tests
        run: python -m unittest
      -
        uses: actions/upload-artifact@v2
        with:
          name: "${{ inputs.python-version }}-${{ inputs.platform }}_${{ inputs.arch }}"
          path: dist/*.whl