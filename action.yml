name: 'Build wheel via Conda'
description: 'Reusable wheel builder action for a hybrid Python project using HDF5 and needing numpy for tests'
inputs:
  os:
    required: true
    description: The runner operating system
  arch:
    required: true
    description: The targeted architecture
  python-version:
    required: true
    description: The Python version to use
  environment-file:
    required: true
    description: The micromamba environment configuration file
  environment-name:
    required: true
    description: The name of the micromamba environment, in the config file

runs:
  using: "composite"
  steps:
      -
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        uses: mamba-org/provision-with-micromamba@main
        with:
          micromamba-version: 0.23.0
          cache-env: true
          environment-file: ${{ inputs.environment-file }}
          extra-specs: python=${{ inputs.python-version }}
      -
        name: Update python tools
        shell: bash -l {0}
        run: python -m pip install --upgrade pip setuptools setuptools_scm wheel
      -
        if: startsWith(inputs.os, 'windows')
        shell: bash -l {0}
        run: python -m pip install --upgrade delvewheel
      -
        if: startsWith(inputs.os, 'macos')
        shell: bash -l {0}
        run: python -m pip install --upgrade delocate
      -
        name: Build the wheel
        shell: bash -l {0}
        run: python -m pip wheel --no-deps -w wheelhouse .
      -
        if: startsWith(inputs.os, 'windows')
        shell: bash -l {0}
        name: Fix the (windows) wheel
        run: delvewheel repair -w dist -v wheelhouse/*.whl
      -
        if: startsWith(inputs.os, 'macos')
        shell: bash -l {0}
        name: Fix & rename the (macOS) wheel
        run: |
          DYLD_LIBRARY_PATH=/usr/local/miniconda/envs/${{ inputs.environment-name }}/lib delocate-wheel -w dist -v wheelhouse/*.whl
          rename -e 's/10_15/10_13/' dist/*.whl
      -
        name: Set artifact name
        id: artifact-name
        shell: bash
        run: echo "value=${{ inputs.python-version }}-${INPUTS_PLATFORM:0:3}_${{ inputs.arch }}" >> $GITHUB_OUTPUT
        env:
          INPUTS_PLATFORM: ${{ inputs.os }}
      -
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact-name.outputs.value }}
          path: dist/*.whl
      -
        name: Install the wheel
        shell: bash -l {0}
        run: python -m pip install dist/*.whl
      -
        name: Test installed wheel
        shell: bash -l {0}
        working-directory: wrap/tests
        run: python -m unittest
